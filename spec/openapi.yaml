openapi: 3.0.1
info:
  title: YumYum Delivery Microservice
  description: Delivery Microservice for YumYum
  version: 1.0.0
servers:
  - url: 'http://localhost:8081/v1'
tags:
  - name: Delivery
  - name: Vendor
  - name: Courier
  - name: Admin

paths:
  /delivery:
    get:
      tags:
        - Delivery
      summary: Get delivery
      description: Fetches delivery based on the order id
      operationId: getDeliveryFromOrder
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: orderId
          in: query
          schema:
            $ref: '#/components/schemas/id'
          example: 30112399
        - name: vendorId
          in: query
          schema:
            $ref: '#/components/schemas/id'
          example: 284792
        - name: courierId
          in: query
          schema:
            $ref: '#/components/schemas/id'
          example: 859234
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delivery'
                example:
                  deliveryId: 0978
                  orderId: 30112399
                  vendorId: 158
                  courierId: 1816
                  rating: 8
                  vendorLocation:
                    longitude: 52.02
                    latitude: 4.37
                  times:
                    estimatedPickupTime: 2023-11-30T14:41:26.902Z
                    estimatedDeliveryTime: 2023-11-30T15:01:57.902Z
                    actualPickupTime: 2023-11-30T14:44:00.902Z
                    actualDeliveryTime: 2023-11-30T15:05:36.902Z
                    delays:
                      description: Heavy Traffic
                      minutesLost: 4
                      requiresCustomerService: false

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

    post:
      tags:
        - Delivery
      summary: Create delivery
      description: Creates a new delivery object for a provided order
      operationId: createDelivery
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  $ref: '#/components/schemas/id'
                vendorId:
                  $ref: '#/components/schemas/id'
                deliveryLocation:
                  $ref: '#/components/schemas/Location'
                estimatedPickupTime:
                  type: string
                  format: date-time
                  example: 2023-11-30T14:41:26.902Z
              required:
                - orderId
                - vendorId
                - deliveryLocation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
              example:
                deliveryId: 0978
                orderId: 30112399
                vendorId: 158
                courierId: 1816
                rating: 0
                vendorLocation:
                  longitude: 52.02
                  latitude: 4.37
                times:
                  estimatedPickupTime: 2023-11-30T14:41:26.902Z
                  estimatedDeliveryTime: 2023-11-30T15:01:57.902Z

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /delivery/{deliveryId}:
    get:
      tags:
        - Delivery
      summary: Get delivery
      description: Fetches delivery object based on delivery id
      operationId: getDeliveryById
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: deliveryId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 0978
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
              example:
                deliveryId: 0978
                orderId: 30112399
                vendorId: 158
                courierId: 1816
                rating: 0
                vendorLocation:
                  longitude: 52.02
                  latitude: 4.37
                times:
                  estimatedPickupTime: 2023-11-30T14:41:26.902Z
                  estimatedDeliveryTime: 2023-11-30T15:01:57.902Z
                  actualPickupTime: 2023-11-30T14:44:00.902Z
                  actualDeliveryTime: 2023-11-30T15:05:36.902Z
                  delays:
                    description: Heavy Traffic
                    minutesLost: 4
                    requiresCustomerService: false

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found
    put:
      tags:
        - Delivery
      summary: Update delivery
      description: Updates delivery based on the delivery id. It can update the courier, the rating, the delivery times,
        the status or if it has been delivered. None of the fields are mandatory. Update is only on fields provided
      operationId: updateDelivery
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: deliveryId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 0978
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courierId:
                  $ref: '#/components/schemas/id'
                rating:
                  type: integer
                times:
                  $ref: '#/components/schemas/Times'
                status:
                  type: string
                  enum:
                    - unpaid
                    - pending
                    - accepted
                    - rejected
                    - preparing
                    - given-to-courier
                    - in-delivery
                    - delivered
                  example: delivered
                delivered:
                  type: boolean
              example:
                courierId: 1816
                rating: 8
                times:
                  estimatedPickupTime: 2023-11-30T14:41:26.902Z
                  estimatedDeliveryTime: 2023-11-30T15:01:57.902Z
                  actualPickupTime: 2023-11-30T14:44:00.902Z
                  actualDeliveryTime: 2023-11-30T15:05:36.902Z
                  delays:
                    - description: Heavy Traffic
                      minutesLost: 4
                      requiresCustomerService: false
                status: delivered
                delivered: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /delivery/unassigned:
    get:
      tags:
        - Delivery
        - Courier
      summary: Gets all ids of deliveries without a courier
      description: Fetches all deliveries without a courier, this allows for couriers to select an order or get the next order
      operationId: getUnassignedDeliveries
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/id'
                example: [ 0979,0980,0981 ]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /vendor/isInRange:
    get:
      tags:
        - Vendor
      summary: Is customer in range from vendor
      description: Returns true if a given customer address is in range from the specified vendor according to the vendors delivery radius
      operationId: isCustomerInRangeFromVendor
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: vendorId
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 158
        - name: customerLocation
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Location'
        - name: vendorLocation
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isInRange:
                    type: boolean
                    example: true

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /vendor/delivery-radii:
    get:
      tags:
        - Vendor
      summary: Get all delivery radii
      description: >
        Gets all delivery radii that are set by the vendors. 
        This will only return a list of vendors that have a custom delivery radius. 
        So vendors that have not set a custom delivery radius, or set their radius to `0` will not be returned.
      operationId: getDeliveryRadii
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    vendorID:
                      $ref: '#/components/schemas/id'
                    radius:
                      type: integer
                  example:
                    - vendorID: 158
                      radius: 75
                    - vendorID: 159
                      radius: 45


        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /vendor/{vendorId}/delivery-radius:
    get:
      tags:
        - Vendor
      summary: Get vendor delivery radius
      description: Get the delivery radius for the vendor. If the radius is set to 0 or not set, the default radius will be used
      operationId: getVendorDeliveryRadius
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: vendorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 158
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  radius:
                    type: integer
                example:
                  radius: 75
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found
    put:
      tags:
        - Vendor
      summary: Update vendor delivery radius
      description: This sets the delivery radius for the vendor. If the radius is set to 0, the default radius will be used
      operationId: updateVendorDeliveryRadius
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: vendorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 158
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                radius:
                  type: integer
                  example: 65
              required:
                - radius
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  radius:
                    type: integer
                    example: 65
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /vendor/{vendorId}/couriers:
    get:
      tags:
        - Vendor
        - Courier
      summary: Get vendor specific couriers
      description: Get all couriers that are hired by the provided vendor
      operationId: getCouriersByVendor
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: vendorId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 158
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PrivateCourier'
                example:
                  - courierId: 1816
                    vendorId: 158
                  - courierId: 1817
                    vendorId: 159
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /private-courier/{courierId}:
    get:
      tags:
        - Courier
      summary: Get vendor for courier
      description: Get vendor-courier relation for the vendor that hired the provided courier
      operationId: getCourier
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: courierId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1816
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCourier'
              example:
                courierId: 1816
                vendorId: 158
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found
    put:
      tags:
        - Courier
      summary: Update vendor for courier
      description: This sets the vendor that hired the courier
      operationId: updateCourier
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: courierId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1816
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vendorId:
                  $ref: '#/components/schemas/id'
              example:
                vendorId: 158
              required:
                - vendorId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateCourier'
              example:
                courierId: 1816
                vendorId: 158
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /courier/{courierId}/getLocation:
    get:
      tags:
        - Courier
      summary: Get courier location
      description: Get real time location of courier. This will be fetched from a GPS service
      operationId: getCourierLocation
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1015
        - name: courierId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 1816
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found


  /admin/default-radius:
    get:
      tags:
        - Admin
      summary: Get default delivery radius
      description: Get the app-wide default delivery radius. This is used if the vendor does not have a custom delivery radius
      operationId: getCurrentDefaultRadius
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 0001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  radius:
                    type: integer
                    example: 50
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found
    put:
      tags:
        - Admin
      summary: Set default radius
      description: Updates the default radius of all vendors without a specified radius
      operationId: setDefaultRadius
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 0001
        - name: radius
          in: query
          required: true
          schema:
            type: object
            properties:
              radius:
                type: integer
                example: 55
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  radius:
                    type: integer
                    example: 55
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

  /admin/analytics:
    get:
      tags:
        - Admin
      summary: Get analytics
      description: Fetches the analytics for the admins
      operationId: getAnalytics
      parameters:
        - name: userId
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/id'
          example: 0001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
              example:
                avgDeliveryTime: 25
                driverEfficiency: 98.05
                completedDeliveries: 54
                issues: [ late, late, food arrived cold ]

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: Bad Request
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 403
                message: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 404
                message: Not Found

components:
  schemas:
    id:
      type: integer
      description: Schema for our ids, keeps them all constant
      format: int64
    PrivateCourier:
      type: object
      x-class-extra-annotation: "@javax.persistence.Entity  @javax.persistence.Table(name = \"couriers\")"
      description: Courier that is privately hired by a vendor. Can only be assigned to the vendor that hired him
      properties:
        courierId:
          type: integer
          format: int64
          x-field-extra-annotation: "@javax.persistence.Id @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)"
        vendorId:
          $ref: '#/components/schemas/id'
    Delivery:
      type: object
      x-class-extra-annotation: "@javax.persistence.Entity @javax.persistence.Table(name = \"deliveries\")"
      description: Object created for the delivery stores ids, locations and ratings
      properties:
        deliveryId:
          type: integer
          format: int64
          x-field-extra-annotation: "@javax.persistence.Id @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)"
        orderId:
          $ref: '#/components/schemas/id'
        vendorId:
          $ref: '#/components/schemas/id'
        courierId:
          $ref: '#/components/schemas/id'
        rating:
          type: integer
        locations:
          $ref: '#/components/schemas/Locations'
        times:
          $ref: '#/components/schemas/Times'
        delivered:
          type: boolean
      example:
        deliveryId: 0978
        orderId: 30112399
        vendorId: 158
        courierId: 1816
        rating: 8

    Error:
      type: object
      x-class-extra-annotation: "@javax.persistence.Embeddable"
      x-field-extra-annotation: "@javax.persistence.Embedded"
      description: Error with error code and description
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 400
        message: Bad Request
    Analytics:
      type: object
      description: Analytics object that stores relevant information for our admins
      properties:
        avgDeliveryTime:
          type: integer
        driverEfficiency:
          type: integer
        completedDeliveries:
          type: integer
        issues:
          type: array
          items:
            type: string
    Times:
      type: object
      x-class-extra-annotation: "@javax.persistence.Embeddable"
      x-field-extra-annotation: "@javax.persistence.Embedded"
      description: Keeps track of estimated and actual times for a delivery, as well as any delays that might have occured
      properties:
        estimatedPickupTime:
          type: string
          format: date-time
        estimatedDeliveryTime:
          type: string
          format: date-time
        actualPickupTime:
          type: string
          format: date-time
        actualDeliveryTime:
          type: string
          format: date-time
        delays:
          type: array
          x-field-extra-annotation: "@javax.persistence.OneToMany"
          items:
            $ref: '#/components/schemas/Delay'
      example:
        estimatedPickupTime: 2023-11-30T14:41:26.902Z
        estimatedDeliveryTime: 2023-11-30T15:01:57.902Z
        actualPickupTime: 2023-11-30T14:44:00.902Z
        actualDeliveryTime: 2023-11-30T15:05:36.902Z
        delays:
          description: Heavy Traffic
          minutesLost: 4
          requiresCustomerService: false
    Delay:
      type: object
      x-class-extra-annotation: "@javax.persistence.Entity  @javax.persistence.Table(name = \"delays\")"
      description: Stores a description, minutes lost and if customer service is involved if a delay occurs
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: "@javax.persistence.Id @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)"
        description:
          type: string
        minutesLost:
          type: integer
        requiresCustomerService:
          type: boolean
    Location:
      type: object
      x-class-extra-annotation: "@javax.persistence.Embeddable"
      x-field-extra-annotation: "@javax.persistence.Embedded"
      description: Address
      properties:
        country:
          type: string
        city:
          type: string
        address:
          type: string
        postalCode:
          type: string
      example:
        country: Netherlands
        city: Delft
        address: Mekelweg 4
        postalCode: 2628 CD
    Locations:
      type: object
      x-class-extra-annotation: "@javax.persistence.Embeddable"
      x-field-extra-annotation: "@javax.persistence.Embedded"
      description: Stores address of vendor and customer for deliveries
      properties:
        vendorCountry:
          type: string
        vendorCity:
          type: string
        vendorAddress:
          type: string
        vendorPostalCode:
          type: string
        customerCountry:
          type: string
        customerCity:
          type: string
        customerAddress:
          type: string
        customerPostalCode:
          type: string
    RadiusVendorPair:
      type: object
      x-class-extra-annotation: "@javax.persistence.Entity  @javax.persistence.Table(name = \"radii\")"
      description: Stores the tuple of vendor and radius
      properties:
        vendorId:
          type: integer
          format: int64
          x-field-extra-annotation: "@javax.persistence.Id @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)"
        radius:
          type: integer
